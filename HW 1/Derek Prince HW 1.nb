(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    134847,       2617]
NotebookOptionsPosition[    132896,       2548]
NotebookOutlinePosition[    133240,       2563]
CellTagsIndexPosition[    133197,       2560]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Homework #1", "Title",
 CellChangeTimes->{{3.6491712963341722`*^9, 3.649171298593822*^9}, {
  3.6495218047955103`*^9, 3.64952181004263*^9}}],

Cell["\<\
Derek Prince
APPM 2450 - 002, Fall 2015
Due 28 August, 2015\
\>", "Subtitle",
 CellChangeTimes->{{3.649171354102372*^9, 3.6491714161854563`*^9}, {
  3.6491715799723988`*^9, 3.649171580023193*^9}, {3.6491716286345663`*^9, 
  3.649171649041956*^9}, {3.649171760233305*^9, 3.649171765332196*^9}, {
  3.6495218154562335`*^9, 3.649521819745556*^9}, {3.6495310072506633`*^9, 
  3.6495310073006487`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.649171551664373*^9, 3.649171559637417*^9}}],

Cell[CellGroupData[{

Cell["Problem 1", "Section",
 CellChangeTimes->{{3.649171478921135*^9, 3.649171479769392*^9}, {
  3.6495227650489893`*^9, 3.649522766903753*^9}}],

Cell["\<\
For the formatting, I just followed Cell to Row to Grid and used the examples \
until I was happy with my formatting.
As far as matching answers, this is exactly what the notes cover from day 1. \
I\[CloseCurlyQuote]m not sure what else to say, the explanations were given \
in the problem.\
\>", "Text",
 CellChangeTimes->{{3.6495227708422804`*^9, 3.6495229493758326`*^9}, {
  3.649523002181059*^9, 3.649523090777362*^9}, {3.649526193453159*^9, 
  3.6495262163433137`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Text", "[", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<1 ->\>\"", ",", " ", "\"\<(a)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<2 ->\>\"", ",", " ", "\"\<(b)\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<3 ->\>\"", ",", " ", "\"\<(c)\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<4 ->\>\"", ",", " ", "\"\<(d)\>\""}], "}"}]}], "}"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6495230313295403`*^9, 3.6495230313448534`*^9}}],

Cell[BoxData[
 InterpretationBox[Cell[BoxData[
   FormBox[
    TagBox[GridBox[{
       {"\<\"1 ->\"\>", "\<\"(a)\"\>"},
       {"\<\"2 ->\"\>", "\<\"(b)\"\>"},
       {"\<\"3 ->\"\>", "\<\"(c)\"\>"},
       {"\<\"4 ->\"\>", "\<\"(d)\"\>"}
      },
      AutoDelete->False,
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"], TextForm]], "InlineText"],
  Text[
   Grid[{{"1 ->", "(a)"}, {"2 ->", "(b)"}, {"3 ->", "(c)"}, {
     "4 ->", "(d)"}}]]]], "Output",
 CellChangeTimes->{3.6496209783436575`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 2", "Section",
 CellChangeTimes->{{3.6495249349686923`*^9, 3.6495249469758215`*^9}, 
   3.649525045646578*^9, {3.649525107621894*^9, 3.649525107671175*^9}}],

Cell[TextData[{
 StyleBox["To check for continuity, evaluating ", "Text",
  FontWeight->"Plain"],
 StyleBox[Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"sin", "(", "\[Theta]", ")"}], "\[Theta]"], TraditionalForm]], 
  "Text",
  FormatType->"TraditionalForm",
  FontSize->14], "Text"],
 StyleBox[" ", "Text"],
 StyleBox["as a limit as \[Theta] approaches 0 to check if it evaluates to 1 \
will do. The point 0, and thus where \[Theta] approaches 0 is the main area \
of concern, as", "Text",
  FontSize->14,
  FontWeight->"Plain"],
 StyleBox[" ", "Text",
  FontSize->16,
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"sin", "(", "\[Theta]", ")"}], "\[Theta]"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->16],
 " ",
 StyleBox["is undefined at \[Theta] = 0. This is the only point in question \
because the function exists at every other value of \[Theta], as ", "Text",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", "1"}], " ", "\[LessEqual]", " ", 
    RowBox[{"sin", "(", "\[Theta]", ")"}], " ", "\[LessEqual]", " ", "1"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 StyleBox[" ", "Text"],
 StyleBox["and \[Theta] only takes on real values.", "Text",
  FontWeight->"Plain"]
}], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.649523317158805*^9, 3.6495233512530127`*^9}, {
   3.649523391581115*^9, 3.649523396628112*^9}, {3.64952343319606*^9, 
   3.6495234769960036`*^9}, {3.6495235706074247`*^9, 
   3.6495235837731047`*^9}, {3.649523651872283*^9, 3.6495236562723055`*^9}, {
   3.649523753061473*^9, 3.649523800607048*^9}, {3.649523831594039*^9, 
   3.649523835709188*^9}, {3.64952387207625*^9, 3.6495239306119533`*^9}, {
   3.649524363037696*^9, 3.6495243650878506`*^9}, {3.6495245340628967`*^9, 
   3.6495245349610276`*^9}, 3.6495251445273395`*^9, {3.649525492167981*^9, 
   3.6495255638086987`*^9}, {3.6495256031942453`*^9, 3.649525663703969*^9}, {
   3.649525726114755*^9, 3.6495257428708277`*^9}, {3.6495258002977715`*^9, 
   3.649525825429093*^9}, {3.6495262772689705`*^9, 3.649526362995826*^9}, {
   3.6495264160592237`*^9, 3.649526453177444*^9}, {3.6495265236471443`*^9, 
   3.649526568761463*^9}},
 FormatType->"TextForm"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "\[Theta]_", "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", "/", " ", "\[Theta]"}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Set", " ", "function"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"f", "[", "\[Theta]", "]"}], ",", 
    RowBox[{"\[Theta]", "\[Rule]", "0"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Limit", " ", "as", " ", "\[Theta]", " ", "approaces", " ", "0"}], 
   " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6495239352217054`*^9, 3.6495240256157856`*^9}, {
   3.6495241832959123`*^9, 3.6495242489344234`*^9}, {3.6495244255480623`*^9, 
   3.6495244269112625`*^9}, {3.6495244581613216`*^9, 3.649524463419325*^9}, {
   3.6495245985176764`*^9, 3.649524616537406*^9}, {3.6495246746885777`*^9, 
   3.649524679334556*^9}, 3.649524716305394*^9, {3.6495247592851105`*^9, 
   3.64952478551301*^9}, {3.6495248456739416`*^9, 3.6495248736100435`*^9}, {
   3.6495258313880424`*^9, 3.649525923233564*^9}, {3.6495259940836782`*^9, 
   3.6495260719559402`*^9}, {3.6495265727809725`*^9, 3.649526637721935*^9}, {
   3.6495267218087153`*^9, 3.649526771834643*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"Sin", "[", "\[Theta]", "]"}], "\[Theta]"]], "Output",
 CellChangeTimes->{3.649620978370655*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.6496209783736577`*^9}]
}, Open  ]],

Cell[TextData[{
 "Since ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"sin", "(", "\[Theta]", ")"}], "\[Theta]"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " evaluates to 1 when \[Theta] approaches 0, and f(\[Theta]) is equal to 1 \
when \[Theta] = 0, ",
 StyleBox["f(\[Theta]) must be continuous",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.649525272935949*^9, 3.649525449439039*^9}, {
  3.6495269429561243`*^9, 3.6495269456131535`*^9}}],

Cell[TextData[{
 StyleBox["Plot 1: ",
  FontWeight->"Bold"],
 "Red line from -5\[Pi] to 5\[Pi], and -0.3 to 1 with a Plot label of f(\
\[Theta]) and a filling to the axis.\n",
 StyleBox["Plot 2: ",
  FontWeight->"Bold"],
 "Thick blue line, same scope as Plot 1, Auto axis label.\n",
 StyleBox["Plot 3: ",
  FontWeight->"Bold"],
 "Dot-dash green line, same scope as previous plots, manual labels of \
\[Theta] and the function for (x,y)."
}], "Text",
 CellChangeTimes->{{3.649526649180478*^9, 3.649526683572184*^9}, {
   3.649526792874902*^9, 3.649526853841154*^9}, {3.6495269487648478`*^9, 
   3.6495269860844064`*^9}, {3.649529644888796*^9, 3.6495296655190315`*^9}, 
   3.649530981519455*^9, {3.6495502572508163`*^9, 3.649550545313822*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"GraphicsRow", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"f", "[", "\[Theta]", "]"}], ",", " ", "Red"}], "]"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", " ", 
          RowBox[{
           RowBox[{"-", "5"}], " ", "\[Pi]"}], ",", " ", 
          RowBox[{"5", " ", "\[Pi]"}]}], "}"}], ",", " ", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.3"}], ",", " ", "1"}], "}"}]}], ",", " ", 
        RowBox[{"PlotLabel", "\[Rule]", " ", "\"\<f(\[Theta])\>\""}], ",", 
        " ", 
        RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"f", "[", "\[Theta]", "]"}], ",", " ", "Blue", ",", " ", 
          "Thick"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", " ", 
          RowBox[{
           RowBox[{"-", "5"}], " ", "\[Pi]"}], ",", " ", 
          RowBox[{"5", " ", "\[Pi]"}]}], "}"}], ",", " ", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.3"}], ",", " ", "1"}], "}"}]}], ",", " ", 
        RowBox[{"AxesLabel", " ", "\[Rule]", " ", "Automatic"}]}], "]"}], ",",
       " ", "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"f", "[", "\[Theta]", "]"}], ",", " ", "Green", ",", " ", 
          "DotDashed"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", " ", 
          RowBox[{
           RowBox[{"-", "5"}], " ", "\[Pi]"}], ",", " ", 
          RowBox[{"5", " ", "\[Pi]"}]}], "}"}], ",", " ", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.3"}], ",", " ", "1"}], "}"}]}], ",", " ", 
        RowBox[{"AxesLabel", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", " ", 
           RowBox[{"f", "[", "\[Theta]", "]"}]}], "}"}]}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "The", " ", "row", " ", "looks", " ", "normal", " ", "under", " ", 
      "wide"}], "-", 
     RowBox[{
     "screen", " ", "conditions", " ", "due", " ", "to", " ", "scaling", " ", 
      "from", " ", "`ImageSize"}]}], " ", "\[Rule]", " ", "Full`"}], " ", 
   "*)"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQ7fIpd8Zrg9eO/6zzwPSbAselIPra7Q3LQfSdc9k7
wfSPE2Cay0/qOYg+lv0CTEucm/gFRFtE5TO8AdI8QUxsIDrnJyMviD5xfpUY
iD727784iD56dZEMiA66cEcNRG+a8kELRDMqMWiD6F8t5ltAtHlPykkQXV6y
d+ZbID15ReQsEF23w3sBiJ4vsXkliF7T4L4BRK/1tdgGom2YTA+A6JPahw+D
aCbpJydA9B3HJ1dAtOvdH50fgHTGobkTQHRZ6eHcb0B6le68MhAdLH6hGkSv
Y5FoBNFar1imgegbk2rANE9xxhIQ3fCQ5SKI1jjo+x5Eb3Gv+QqiAY/Iua4=

  "]],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
0L3y17OZphLQG95vO7e7Cvw9u6NCpksKPsF0E18YMBC1rGMU5yDCU7WFx2sS
i5B5B+MvLVsSbHbeyLHw2/YTbqVLsw7KsO2ZvbXKLAWMLRz4e7uEDJvG5kkq
23w2Evhg64qFGlRQYTayCHUEwllOR95dVMOTvK6MhVIWoM+kinGnnCpOm12f
79ufDD5p9u3wbifjJXmJ35NEKhCvjvHle66MfTWvi2w5UsFRX4kj0xZK2E9b
c+bfYgoo8XU8U0mviIdN4niOxrmjwJddmgW18jgh23VXuk4WUn3/gUvGiYRv
p0Ya7t/mT44P+0hWYkSc5d6ASmeL0NHZbs6iUVlsXHya9R/IQE12ew9yhsjg
i4Xu0qmfwsHTe0cGwoylMfVUQNBGcSFQr+FtPMlHwIpSD5jNTiGgG2e8JeQn
gRfbDqhd6akC/WMlnJ9YxbDOldcanaZUICVE5Am1Fsa1TukuNkcTUI9D7ov2
cgF8Oi/oYU5xNTr62ZtifYQPizJ+Wez/rwUdHuq99DmWG28I+F+KkGlBTEyT
dqcPceIn+kNibS8r0Of9CpO0MRacTLASv/KtFITGJfzn8JYeT7UxXBv07Qcu
Wfon5c6so5T8JwPJWl/B6tVZJcrZOXT750ze24JtPxnUqXtH+4i+lRs74uAF
YC719oytcw+Qs/B0DL+zAD72W4jdvbIAxCu0UrrEZgDTzc+RpfHr4KyQ6++O
3xMg/yQToYLMALnKd1gyPOkFnKWX/t5zZoU59/KsrW/lg+n2vXFJNpwwxOlZ
h8mZSnTWaT3UtY8bevC/irNLbkFVMr53Ss35IPtF8nTuyRZk4RlY7F8nAJW+
yzMvPK1GdscZrlheE4bpd4WfJB6KQ5mL2ncmvojCFgXrilwZCrjG823Z45kE
vLq2eO3IzyrQ4/a2zZqFABl3v+0dDUVgpzKLaQWUhjcmfXOFDhUBusTMx4RI
GXjneWLQ1YZnIJJBZe7iR1loo7fUky+Tjk7dULVWVCLCiFbdnxT5YtRXn/hU
0ZsElRbkpPWEi9E/zpVJphJ5mOfDcWa/eDYa4fbd+rpDEW59Qi/HtJyQ303b
rOgTSrD2Unh1vHkK0I25z8j9WBme+rSxyHWcCvL9+3hC+shwK/XPDsy1fc/l
vZaa/Nt+MtRG3yuSAobfi1xANar41WzfbeD0Cgh6fm+duqeCq5gqI/nys4Hr
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
qtMGJjP42382/8Mz+/8ABfiP9g==
       "], {{
         {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
          None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwVzjksw3EchvG/c2nVyNpRy2ZwJeKMlUncx4RqMdgwIq5J2RhZtTWw6kRi
YlQSR8JC2JD4GN583+d5f/+m0YlUX7I4CIIiWZTZ0iBIyIY+IFMlQTDqwa4H
IclwNdLON/BJ7hFvyiq3xGW4GhnkprkxLo3DcoHP8LuetR/gXXyJ26SAb3BI
YvYO3KinbG/6g/7En+hH+h1f6f+W4S1+zV3m67ms7Rd/4n4cw9c4j3vwN466
VdykO+T7GX3cHsd79i/8intxBc7jc9yKP3C1G+Fyvj1007Yrvpz/0dv1e/5W
D///rneduEmfsz3jDD7GBbyN1/EKzuG4DHMJboLbxxE55Wqli2/m57kXvCMj
Uifdthbbgu0PKis8mA==
             "]], PolygonBox[CompressedData["
1:eJwt00lIlGEAxvGvxnSMOhS40UHNPHSxsktqdgiyoMUtsIIOmmk5WqeyaIGy
7FRpt9IO7Ydy5tYCRYtFGXRIO2nLRaEgA1upDvZ7ocPD+/z/z3zwffPNFDbt
rdszM4qikE5JpEVRm9TojbEoajCcnhFFMbnJ5csKvoRv5kbxcTnGdXIDXJHU
ck3cFu4MTpNH+Db+rN+y9+Fe/BxXyhh+jTOkwF6Gl+g7bZ/0D/oYn9Sv6qP8
XPcaw13hPpwH+FIuafuLp3ADXoRf4UFchX/jfGcW1+isc/0Ofat9MT5r/4o/
4mo8Cz/Gd3AlnsTZzjncgGv7nedsL8Kz8n/0VfpbfliPS6HPleOlekvYcApf
C8+FT+AufBCncLHUc83cNq4Hp0uSWygV/DK+lXuHT8pmKZKVtlLbLtt73C2t
7qtF0sN7tGfZ14fnwrvDe5Vqfg1/iJ/C5yVDCvhsfgP/BLfJPi7BXeJypIyr
4aq4w+H7w3dxEo/jC7gHd+P7uFRG8BCe1uP2QpyDN+IJfUwf5K/r/fown+kZ
pvUEv59v10u4y7ZfeBLX41w8hB/i1fgHXuCcx213lru+Vl9rL8ZH7F/wePhe
8Df7PZzCZXjCPt8Z5/psvc5Ttgd8xP/Ul+tv+Jf//1SZ4V3hXH2T7Sm+gS/i
Edwe/ne4A1/BeVLB1XHruKP4e/h9yezwbvm88Jvkn+GO8K7lH7Mncmo=
             "]], 
            PolygonBox[CompressedData["
1:eJwVzzksRFEAheE3ZioajNZeiC3RITpbZ00wQyFR0RB7YWlsBUq0tsTW0VKg
tHVotJaKzlr4XnFyz/+f95J78/uG2gdTgiCIyKwMxIKgX9L14mgQ5Bo7jFd4
VGqli2/i5/hvvCUZUsLn8Z38NR6TKW6Y2+OypY5LcM3cPP7Bp/gYv+JtvIaX
8TmulAd8g6OSaS/F+XqX7UV/0m/4Q31Tv+fTvCGCx/lp5whfwe2Hd8bv4btw
Tvg2fI7r8Wd4T2ec63XW+z+pt9iL8IL9Az/jJvxrP8MnuAa/2bOcqdyObd25
YrvgU/gvvUp/5G/1mMR9V4YL9ITtFh/hLfyAJ/AMHsUHOFcauG6ulVvEf3hX
NrhV7pKrDu/ClXOFXBLf4UlplB6+jV/i/wGaPj5E
             "]]}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
          None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwVzzssQ2EAhuHjFiphZCWhGqvbpGWyisQtxdDEvRglGN032pWRUduJFQuD
hVFdJwYSNgyeM3z5v/f9es7525haGlgsDYKgRJZlvjwI0vKqL5Bdxt6yIIjh
UdmVF0nbOm09thZckGouKxP8DD/CxXBB1rhNbocr4mOcx8/hN3EHTuBo+B79
Th5wj+1Xr3Cn6/A+ziw+tOX9Nolr9Hrnpz3uPLNfcBHcj9/wN87gVjyOp/Gw
51O4Tm9w/tj7nJf2m/B/4S/9L/yW3mZbxRt427Plzlru3nbE5/AT/6S/63N8
ux7Xm/mIfitFnLBdSQYf4Jz9A5/ic1yl78sYnsJD9ijOyQq3zm1xjzIb3o3r
5prwiVRye5LkJ/lB7h9/WTvJ
             "]], PolygonBox[CompressedData["
1:eJwV0TssQwEchfFbLN4JGyWReG0WDBKvmNCBtowGC5OWyWPwmDBipQaEjZWE
Th5lVJNVbUzajn4dTv7n+85t0tzbNp+ILpUFQRCSDVmoCIJFGdVXJCNxY6uH
usuDoB7347Tsc0fcKVeUHS7CzXIjOIwvJMmtc8tcFqfwFX7BMdyCu3AdLtPf
5AP32Qp6yP950Pf0Qz7luUq3kf/mB9wb2x1XsEXwF/7F2/ZOPIln8LB9Djfo
YTdvH3PT9gzXjOP4BxfxOe7BCbyGk34fuFXcu+2Ev8TP9Kee06N8WO/Ua0vv
Vn+VLO613csuPsAn9hy+xrc4j7fwBI7jIdyEz6T0oVa5BPck01wz18HV4GP5
k01+nI/xg3hJHmWKb+Lb+Wr8D1nTO4M=
             "]], PolygonBox[CompressedData["

1:eJwt0TcsRmEAheFPC6M+aInEKoi6KtEZjGISfSBBosSGEZMSEgxsrES3MWI0
YtQGbMpzE8k9+c77ni/575+b3z3SMRwbQoiRmf9zOD6EPqnUB+RSmg3pLubF
hZCAS/CJzHNL3Br3LtNcHdfOVeBMvC1D3DjXz93iDbyLL3ATTsO52M+GH3yN
73Cx/qn/6sd6hQtzeBGvutuJE/UU56O9yrlvP+TeoveOPH7BU/YCXIvbcLm9
CyfrWc4Pe7Xz3H7NZeBn/Uvf0gttg3gM90XvqSdxN7Z1fYc/5+/1J72RT9Vz
dE/4xlf4FhTpRzKLF/CK/QHv4QP8iidxDW7FZTgdb8oAN8r1cmfSwKVw2Vz0
LZflRSai/0O08KW4R06lnk/ms/g/fSI8zQ==
             "]], 
            PolygonBox[CompressedData["
1:eJwV0TcsRWEYxvGjhImrLIxYuUpiVBJEGW0m3KtMXKLMyoZBS/QBG6teViZl
w6Ys2qRsiN8dnrzP//9+38nJOXmRWHNvYhAECTIuPclBEJMyvdPMTQqCAjPk
0J084TqHr2QJb+JjZ7PxmnRz/VyUm5d3Gear+Sa+FB9JFrcqXXwfH+HC+EDG
uClujnvA23gXv+EhXIUbcQlO12/lEdfa/eqp3vdSX9Q3+EPnQmYu/xl/F/PU
7pzLxM34DX/jFVyIO3EMt7vbgXP0fPPHvtE8s7/minAL/sJ/eB+X41E8iWfd
TzEzuHu7LX4Hv/KP+rs+yFfqDXoxn6bfyAOusbuQBbyOD+w/8Ak+iz9XX5YO
3Ivb7AvxnoxwE9wM9yIDXAVXz4Xxfvy7xP+jRPkevpWblmf5BxA8RRA=
             "]], 
            PolygonBox[CompressedData["
1:eJwl0EswlWEAh/GPIxstkSITo6JcK5qRrUFFM1KL3LViURsZXdx2yGCJpVuF
drWtmSZWZojksrDNaMOumqF+31g8877P8z8z55w3reVp9ZPoIAiiMI3WmCBo
Q5/7Nh4bcnzgZiQIUvkcorUhPNSb9HtaL7bQomfrRfp5XoUebKLZdtVWaEvh
lejGDzTZrthu2JJ5CV/CqDahvQt/I3+NB1qjdldL5wvo0Hq1rvB38yn+nm/w
Rp7Fr/NzPNZ9FTv8lu2Pe8R/XnQfcR/X3/pcnDNB/6WXOD/aPkdOHquK/+SH
fJBn8hrewO+E/4fHh2/m/G0vdX6xL2tp4dvxA/6Xz/MC/oz38FfhGztPa1u2
SX2Bf9d33ffcG8LvdL/mflY/5b6CbV5s+4phPsbf2Pf5B/6J/+MD/D6v57f5
BT6Hdq1be6mto167rBVoSXwWx+jXq/U6vYK/wBrq9Et6vn6Gl+M5vqHWdtGW
Z0vkZejEKh7ZMmy54ZvzGRzhPy9wTLY=
             "]]}]}, {}, {}}, {{}, {}, 
         {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1: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
dmNFn/0PZbIfZg==
           "]]}}}],
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
        True},
      PlotLabel->FormBox["\"f(\[Theta])\"", TraditionalForm],
      PlotRange->{{-15.707962626807607`, 15.707962626807607`}, {-0.3, 1}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{Automatic, Automatic}], {193.5, -116.80842387373012`}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}], InsetBox[
     GraphicsBox[{{}, {}, 
       {RGBColor[0, 0, 1], Thickness[Large], Opacity[1.], 
        LineBox[CompressedData["
1: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
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox[
         TagBox["\[Theta]", HoldForm], TraditionalForm], None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None},
      PlotRange->{{-15.707962626807607`, 15.707962626807607`}, {-0.3, 1}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{Automatic, Automatic}], {580.5, -116.80842387373012`}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}], InsetBox[
     GraphicsBox[{{}, {}, 
       {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
        Dashing[{0, Small, Small, Small}], LineBox[CompressedData["
1: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
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\[Theta]", TraditionalForm], 
        FormBox[
         FractionBox[
          RowBox[{"sin", "(", "\[Theta]", ")"}], "\[Theta]"], 
         TraditionalForm]},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None},
      PlotRange->{{-15.707962626807607`, 15.707962626807607`}, {-0.3, 1}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{Automatic, Automatic}], {967.5, -116.80842387373012`}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}]}, 
   StyleBox[{{}, {LineBox[{{0, 0}, {0, -233.61684774746024`}}], 
      LineBox[{{387., 0}, {387., -233.61684774746024`}}], 
      LineBox[{{774., 0}, {774., -233.61684774746024`}}], 
      LineBox[{{1161., 0}, {1161., -233.61684774746024`}}], 
      LineBox[{{0, 0}, {387., 0}}], LineBox[{{387., 0}, {774., 0}}], 
      LineBox[{{774., 0}, {1161., 0}}], 
      LineBox[{{0, -233.61684774746024`}, {387., -233.61684774746024`}}], 
      LineBox[{{387., -233.61684774746024`}, {774., -233.61684774746024`}}], 
      LineBox[{{774., -233.61684774746024`}, {1161., -233.61684774746024`}}]}},
    Antialiasing->False]},
  ContentSelectable->True,
  ImageSize->Full,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.649620978600253*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6495497398138742`*^9, 3.649549741996076*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 3", "Section",
 CellChangeTimes->{{3.649550720443229*^9, 3.6495507249188385`*^9}}],

Cell[TextData[{
 "Area of square; ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\nArea of circle: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Pi]", "*", 
    SuperscriptBox["r", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\nBut the material will be used for the circumference; C = 2\[Pi]r\n\
Relating area with circumference gives; ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"2", "\[Pi]r"}], " ", "=", " ", 
    RowBox[{"\[Pi]", "*", 
     SuperscriptBox["r", "2"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " -> \n",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", " ", "=", " ", 
    RowBox[{"10", " ", "-", " ", "x"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", which gives the relation; ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["A", "T"], " ", "=", " ", 
    RowBox[{
     SuperscriptBox["x", "2"], " ", "+", " ", 
     RowBox[{"2", 
      RowBox[{"\[Pi]", "(", 
       RowBox[{"10", "-", "x"}], ")"}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " for total area."
}], "Text",
 CellChangeTimes->{{3.6496139821315327`*^9, 3.649614030081582*^9}, {
  3.649616287849243*^9, 3.6496163077844534`*^9}, {3.649616349982896*^9, 
  3.649616415637059*^9}, {3.6496171063982587`*^9, 3.6496171290621357`*^9}, {
  3.649617844131796*^9, 3.6496179710467253`*^9}, {3.6496215850550747`*^9, 
  3.6496216282158422`*^9}, {3.6496216978967237`*^9, 3.6496218197897434`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Clear", " ", "old", " ", "function"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6496140138434515`*^9, 3.649614025465898*^9}, {
  3.649617974106246*^9, 3.649617984032936*^9}}],

Cell[TextData[StyleBox["A.",
 FontWeight->"Bold",
 Background->RGBColor[1, 0.85, 0.85]]], "Text",
 CellChangeTimes->{{3.6496207613405786`*^9, 3.649620761595483*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], " ", "=", " ", 
  RowBox[{
   SuperscriptBox["x", "2"], " ", "+", " ", 
   RowBox[{"\[Pi]", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"10", "-", "x"}], ")"}], "2"], " ", 
    RowBox[{"(*", " ", 
     RowBox[{"=", " ", 
      RowBox[{"total", " ", "area"}]}], " ", "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6496160074313498`*^9, 3.6496160114803896`*^9}, {
  3.6496164511475115`*^9, 3.649616500411267*^9}, {3.649616703288579*^9, 
  3.6496167757779284`*^9}, {3.6496171359091883`*^9, 3.6496171846357183`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Pi]", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"10", "-", "x"}], ")"}], "2"]}], "+", 
  SuperscriptBox["x", "2"]}]], "Output",
 CellChangeTimes->{3.649620978709775*^9}]
}, Open  ]],

Cell["Plot the graphs for a better look at their behaviors.", "Text",
 CellChangeTimes->{{3.649619015502832*^9, 3.6496190343929462`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", " ", 
     RowBox[{
      RowBox[{"f", "'"}], "[", "x", "]"}], ",", " ", 
     RowBox[{
      RowBox[{"f", "''"}], "[", "x", "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "3", ",", " ", "13"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "40"}], ",", " ", "175"}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{"\"\<Expressions\>\"", ",", " ", 
      RowBox[{"{", 
       RowBox[{"0.45", ",", " ", "0.75"}], "}"}]}], "]"}]}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"PlotPoints", "\[Rule]"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.649619045275182*^9, {3.649619099271261*^9, 3.6496191001698236`*^9}, {
   3.649619256779423*^9, 3.649619263513953*^9}, {3.6496193717371225`*^9, 
   3.6496194224212995`*^9}, {3.6496194606812134`*^9, 
   3.6496194693490934`*^9}, {3.649619510673344*^9, 3.6496195288052874`*^9}, {
   3.649619613553766*^9, 3.6496196452018785`*^9}, {3.6496197319162498`*^9, 
   3.649619775073059*^9}, {3.649619922831696*^9, 3.649619944152673*^9}, {
   3.649620026764904*^9, 3.6496201220997615`*^9}, {3.649620862745059*^9, 
   3.64962091798258*^9}, {3.649620957562969*^9, 3.649620957606973*^9}, {
   3.649620995997032*^9, 3.6496210945135746`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
0K/fqw34H/s2gfI=
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVz2s0lHkAx3FdWNtOZtwNg5nB8CAZ99jWbybzUCknZbYkNSGkXWGztFsW
G8kml0MqROFoizpJymX8beWS2E5qL8welBUlCSOV2PbF93xef3l7o/3Dlqqo
qGz61P+qCUONVFTUMR17sr/xo5joNfbo+qipI+dJZcQP78VEIFnDymaow86N
KN3fion3Dg1VLlsd4R+nmA2TYnI8+daEp4M6FOnbvW49E5MVjxi/JYWq426R
WfWNTjFhxtVFLHaoI6/t9tHqfDExqFO7uZDzOZwMR3jnV4kJP8nxTLfkCzhc
qdJY4isiJZOmZo0KBgpFjFRpIojGWKhTdZQG1Pz8m88FeJJGbcN2Vw0WpJO7
W9Pz15KqNJm31V8sxBdefRw47UFyOBMvVWo1oaXX62Rj505mlILH/RlauOkU
GeIZ40ZYF1uYtL82bANFZe6PXIhVXHF0oY0OjAJe2TiynMk7vX7+4VkdKKT9
97QOOBKvhbvs4GZdVLzzsHN5KCSZ6jNO1vl6GI05+EyqaU8yR1IuHgvWx4eh
br/mQVuS/lzq0ulmAHbm3tj27RSZt/mTwWSysTleIdwxZEGsvepdhv9ggx/d
x7xdwSfbkhQ/l101hMJChWnpY0Jcs2SCiUQj3Dy+1SOhSZ/oEZtxfgAHCaLZ
s/JyFol2vqDcYWuMpvm2CKugZST5aII/V2kM3GiT2ieMtZx6kdfb02MCbr/2
ztODE55Sa2YV46wpOKE2600HlqNLarSn0p6LE6ELZh+HWBi7tOVoQxEXnFb9
g4cG9TE84koXLOEhfimVtCXcBLvqwB35loep+EOrOM185FWYclz7eCiwjln4
zEWAiqSaVr+v+Ch4OHrNIo6C88vdiYpf+SjtutXpM2uLMrT22bPMkBK09GmP
iT3u18/tSoszg+31umznBiFiiP+034AZAh3yp0oSHKG8HuQwtM4cjZcdJDy2
M966ZKSOXDNHqd/8hkqFC56Uhx2t1bPAjfFUkVeKGw46GZxLPmwB+WhhZImp
OzICXnXeGbGAL7PP68OAB5L2xF7o3ijAytV/s2JS1mJ6nn1y420BtiUuzx7z
9oR54+kz980t4ZMTzD2VAghD7vlpZljiyFP2G2d/EZqKdA0eKC2h9IkyCnYU
w5zonti80wpqV4zkuarrsF513PiR3Aq58tzEit51GO8fvtNpTWHPyPmsNbVe
iCo6qZ1xikLbCganL1WCjiXmrzfkUGAcl105ki6BILzhPiOPwjbV+i95mRIM
Cp8nZxdQGFyU7YrIlUDajsnTxRTmZ+pLZkslwNT0g8rLFOwGQnjacgl0fALT
7rZTKKhtFPjOSRBTPSlL66TQb69Z//qDBD1a6Wt9uijwavZ55y1KkPFP7UxX
D4WrVZoRfWo0FmJXhvQ+odBRHH4pQpfGWDHxfPqMwkK6tu0xBxr0sq+Nyv+l
4KUa2WTlQqM84tVs2HMKv6TIfR+soRHsaFgz9oKCwZHIb7RFNB53xHHevKHg
FNtSU+ZHQ2i3Yu76NIXE1zqekq00svJKe79TUmg5sP/3USmN9cHdJ+bmKGwK
151cHUyj8k7Ivob3FPKG9//UK6OxnHov+nH+04+MsL4PoyHLyjb+aoECd0C3
zDCShnxa8G5xkcK+oCih/ACN/wBnyiEH
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzWaYIs3AwOHQI6a06u8EBQf+4q0Z/08g+BJb2bb9
m8gJ5yvVG88868oN58/7IK+8+w4PnM/3MsVkbTYfnL9bWOq4OZ8AnL+iLdFd
4waCP1Hm3WuGzYJw/pevaldudwrB+QKL9/O7BQnD+RrFc/NnaIvA+T/FbitV
fUPwXf4dkYzbKwrnd3N8MdGaKobgP2ta3BonDue3Pw8zO2khAef/0b7Ow88v
CedruWw3e3INwQ+pv9OycL0UnG/el6j2rlIazhc7oP1GKVQGzs83XfQ1UkcW
zm+sqwhS+Irg97+afPncOTk4P0yLfwXPLHk4/3SYdMIyAwU4/+XKwLpdcxD8
J8/M3aYxKsL5sVsdFJ7lIfiTl8rLmN9C8JfWrzvob6cE55u+jq+8swrBX+hw
8JaBgDKcf2r7j9i2YgS/8EDQZ//7CP7XTTFGD51V4PzvZp3NzzYg+FeXpNZt
FlOF8wtMJGY3ViH4naFvTx5+huDXJxQtOuutBud//iPZ670TwVfZPX3mKRV1
ON8w+ai/YCeCv2eOqMSZrwi+ygHRLr9oDTjfk/WN7KV9CP6b208On9TShPOz
5/QKd/Yj+CIeUW1HjiP4+z6r/fz/H8EHAKjCYCM=
       "]]}}, InsetBox[
     TemplateBox[{RowBox[{"f", "(", "x", ")"}],RowBox[{
         SuperscriptBox["f", "\[Prime]", MultilineFunction -> None], "(", "x",
          ")"}],RowBox[{
         SuperscriptBox["f", "\[Prime]\[Prime]", MultilineFunction -> None], 
         "(", "x", ")"}]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.45, 0.75}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{4., 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None},
   PlotRange->{{3.0000002040816325`, 12.999999795918367`}, {-40, 175}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
0K/fqw34H/s2gfI=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJwVz2s0lHkAx3FdWNtOZtwNg5nB8CAZ99jWbybzUCknZbYkNSGkXWGztFsW
G8kml0MqROFoizpJymX8beWS2E5qL8welBUlCSOV2PbF93xef3l7o/3Dlqqo
qGz61P+qCUONVFTUMR17sr/xo5joNfbo+qipI+dJZcQP78VEIFnDymaow86N
KN3fion3Dg1VLlsd4R+nmA2TYnI8+daEp4M6FOnbvW49E5MVjxi/JYWq426R
WfWNTjFhxtVFLHaoI6/t9tHqfDExqFO7uZDzOZwMR3jnV4kJP8nxTLfkCzhc
qdJY4isiJZOmZo0KBgpFjFRpIojGWKhTdZQG1Pz8m88FeJJGbcN2Vw0WpJO7
W9Pz15KqNJm31V8sxBdefRw47UFyOBMvVWo1oaXX62Rj505mlILH/RlauOkU
GeIZ40ZYF1uYtL82bANFZe6PXIhVXHF0oY0OjAJe2TiynMk7vX7+4VkdKKT9
97QOOBKvhbvs4GZdVLzzsHN5KCSZ6jNO1vl6GI05+EyqaU8yR1IuHgvWx4eh
br/mQVuS/lzq0ulmAHbm3tj27RSZt/mTwWSysTleIdwxZEGsvepdhv9ggx/d
x7xdwSfbkhQ/l101hMJChWnpY0Jcs2SCiUQj3Dy+1SOhSZ/oEZtxfgAHCaLZ
s/JyFol2vqDcYWuMpvm2CKugZST5aII/V2kM3GiT2ieMtZx6kdfb02MCbr/2
ztODE55Sa2YV46wpOKE2600HlqNLarSn0p6LE6ELZh+HWBi7tOVoQxEXnFb9
g4cG9TE84koXLOEhfimVtCXcBLvqwB35loep+EOrOM185FWYclz7eCiwjln4
zEWAiqSaVr+v+Ch4OHrNIo6C88vdiYpf+SjtutXpM2uLMrT22bPMkBK09GmP
iT3u18/tSoszg+31umznBiFiiP+034AZAh3yp0oSHKG8HuQwtM4cjZcdJDy2
M966ZKSOXDNHqd/8hkqFC56Uhx2t1bPAjfFUkVeKGw46GZxLPmwB+WhhZImp
OzICXnXeGbGAL7PP68OAB5L2xF7o3ijAytV/s2JS1mJ6nn1y420BtiUuzx7z
9oR54+kz980t4ZMTzD2VAghD7vlpZljiyFP2G2d/EZqKdA0eKC2h9IkyCnYU
w5zonti80wpqV4zkuarrsF513PiR3Aq58tzEit51GO8fvtNpTWHPyPmsNbVe
iCo6qZ1xikLbCganL1WCjiXmrzfkUGAcl105ki6BILzhPiOPwjbV+i95mRIM
Cp8nZxdQGFyU7YrIlUDajsnTxRTmZ+pLZkslwNT0g8rLFOwGQnjacgl0fALT
7rZTKKhtFPjOSRBTPSlL66TQb69Z//qDBD1a6Wt9uijwavZ55y1KkPFP7UxX
D4WrVZoRfWo0FmJXhvQ+odBRHH4pQpfGWDHxfPqMwkK6tu0xBxr0sq+Nyv+l
4KUa2WTlQqM84tVs2HMKv6TIfR+soRHsaFgz9oKCwZHIb7RFNB53xHHevKHg
FNtSU+ZHQ2i3Yu76NIXE1zqekq00svJKe79TUmg5sP/3USmN9cHdJ+bmKGwK
151cHUyj8k7Ivob3FPKG9//UK6OxnHov+nH+04+MsL4PoyHLyjb+aoECd0C3
zDCShnxa8G5xkcK+oCih/ACN/wBnyiEH
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzWaYIs3AwOHQI6a06u8EBQf+4q0Z/08g+BJb2bb9
m8gJ5yvVG88868oN58/7IK+8+w4PnM/3MsVkbTYfnL9bWOq4OZ8AnL+iLdFd
4waCP1Hm3WuGzYJw/pevaldudwrB+QKL9/O7BQnD+RrFc/NnaIvA+T/FbitV
fUPwXf4dkYzbKwrnd3N8MdGaKobgP2ta3BonDue3Pw8zO2khAef/0b7Ow88v
CedruWw3e3INwQ+pv9OycL0UnG/el6j2rlIazhc7oP1GKVQGzs83XfQ1UkcW
zm+sqwhS+Irg97+afPncOTk4P0yLfwXPLHk4/3SYdMIyAwU4/+XKwLpdcxD8
J8/M3aYxKsL5sVsdFJ7lIfiTl8rLmN9C8JfWrzvob6cE55u+jq+8swrBX+hw
8JaBgDKcf2r7j9i2YgS/8EDQZ//7CP7XTTFGD51V4PzvZp3NzzYg+FeXpNZt
FlOF8wtMJGY3ViH4naFvTx5+huDXJxQtOuutBud//iPZ670TwVfZPX3mKRV1
ON8w+ai/YCeCv2eOqMSZrwi+ygHRLr9oDTjfk/WN7KV9CP6b208On9TShPOz
5/QKd/Yj+CIeUW1HjiP4+z6r/fz/H8EHAKjCYCM=
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {4., 0}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None}, 
      PlotRange -> {{3.0000002040816325`, 12.999999795918367`}, {-40, 175}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        HoldForm[
         $CellContext`f[$CellContext`x]], 
        HoldForm[
         Derivative[1][$CellContext`f][$CellContext`x]], 
        HoldForm[
         Derivative[2][$CellContext`f][$CellContext`x]]}, LegendMarkers -> 
       None, LabelStyle -> {}, LegendLayout -> "Column"]], {0.45, 0.75}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.649620978841598*^9, {3.649621031359638*^9, 3.649621066344141*^9}}]
}, Open  ]],

Cell[TextData[{
 StyleBox["B.",
  FontWeight->"Bold",
  Background->RGBColor[1, 0.85, 0.85]],
 "\nAs one might expect from the function, the graph is in the shape of a \
parabola, meaning that there will only be one root."
}], "Text",
 CellChangeTimes->{{3.6496190757020903`*^9, 3.6496191144551945`*^9}, {
  3.6496205773678503`*^9, 3.6496205892763243`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"f", "'"}], "[", "x", "]"}], " ", "==", " ", "0"}], ",", " ", 
    "x"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Solve", " ", "for", " ", "critical", " ", 
     RowBox[{"point", " ", "--"}], " ", "where", " ", "the", " ", 
     "derivative", " ", "of", " ", "the", " ", "area", " ", "function"}], " ",
     "==", " ", "0"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.649617219683302*^9, 3.649617282647807*^9}, 
   3.6496173641580563`*^9, {3.6496174085348296`*^9, 3.649617420639042*^9}, {
   3.649617472964245*^9, 3.649617476493156*^9}, {3.649617508941656*^9, 
   3.6496175127856274`*^9}, {3.6496176071827393`*^9, 3.649617618168945*^9}, {
   3.6496180101474895`*^9, 3.64961802216446*^9}, {3.64961913206363*^9, 
   3.64961915565937*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    FractionBox[
     RowBox[{"10", " ", "\[Pi]"}], 
     RowBox[{"1", "+", "\[Pi]"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.649620978891243*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"f", "'"}], "[", "x", "]"}], " ", "\[Equal]", " ", "0"}], ",", 
    " ", "x"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Decimal", " ", "answer"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6496175265534763`*^9, 3.6496175373348207`*^9}, {
  3.6496176317106037`*^9, 3.6496176742598667`*^9}, {3.649618031956555*^9, 
  3.6496180551707525`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "7.585469929947761`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6496209789112177`*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["C.",
  FontWeight->"Bold",
  Background->RGBColor[1, 0.85, 0.85]],
 "\nThis point is a global minimum, as it is the lowest point on the parabola."
}], "Text",
 CellChangeTimes->{{3.64962060085439*^9, 3.649620618762632*^9}, {
  3.6496208132697153`*^9, 3.649620823389679*^9}, {3.6496213165345016`*^9, 
  3.6496213257521205`*^9}}],

Cell[TextData[{
 StyleBox["D.",
  FontWeight->"Bold",
  FontColor->GrayLevel[0],
  Background->RGBColor[1, 0.85, 0.85]],
 "\nSince this is a concave-up parabola, the global maximum of f(x) is \
\[Infinity] at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", " ", "=", " ", 
    RowBox[{"\[PlusMinus]", "\[Infinity]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n(I initially tried FindMaximum as well, but it couldn\[CloseCurlyQuote]t \
find \[Infinity]. Understandably.)"
}], "Text",
 CellChangeTimes->{{3.649619245881733*^9, 3.649619250522232*^9}, {
  3.649620149088475*^9, 3.6496201795363903`*^9}, {3.6496202413493752`*^9, 
  3.649620361091604*^9}, {3.649620409279292*^9, 3.6496204344885044`*^9}, {
  3.6496204950704126`*^9, 3.649620495432675*^9}, {3.6496213479114017`*^9, 
  3.6496214356569667`*^9}}],

Cell[TextData[{
 StyleBox["E.",
  FontWeight->"Bold",
  Background->RGBColor[1, 0.85, 0.85]],
 "\nThe wire should be cut  at ~7.58 units, using the larger portion for \
assembling the square, and the smaller for the "
}], "Text",
 CellChangeTimes->{{3.6496214458083944`*^9, 3.649621543325418*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1459, 853},
WindowMargins->{{169, Automatic}, {66, Automatic}},
FrontEndVersion->"10.2 for Microsoft Windows (64-bit) (July 29, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 146, 2, 101, "Title"],
Cell[729, 26, 407, 9, 126, "Subtitle"],
Cell[1139, 37, 157, 3, 31, "Input"],
Cell[CellGroupData[{
Cell[1321, 44, 145, 2, 70, "Section"],
Cell[1469, 48, 484, 9, 49, "Text"],
Cell[CellGroupData[{
Cell[1978, 61, 557, 14, 31, "Input"],
Cell[2538, 77, 548, 16, 82, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3135, 99, 170, 2, 70, "Section"],
Cell[3308, 103, 2246, 54, 44, "Input",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[5579, 161, 1222, 24, 52, "Input"],
Cell[6804, 187, 134, 3, 46, "Output"],
Cell[6941, 192, 72, 1, 31, "Output"]
}, Open  ]],
Cell[7028, 196, 480, 14, 43, "Text"],
Cell[7511, 212, 741, 16, 68, "Text"],
Cell[CellGroupData[{
Cell[8277, 232, 3206, 84, 132, "Input"],
Cell[11486, 318, 82799, 1396, 292, "Output"]
}, Open  ]],
Cell[94300, 1717, 94, 1, 31, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94431, 1723, 96, 1, 70, "Section"],
Cell[94530, 1726, 1507, 44, 114, "Text"],
Cell[96040, 1772, 280, 6, 31, "Input"],
Cell[96323, 1780, 165, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[96513, 1787, 578, 14, 31, "Input"],
Cell[97094, 1803, 220, 7, 31, "Output"]
}, Open  ]],
Cell[97329, 1813, 137, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[97491, 1818, 1459, 32, 52, "Input"],
Cell[98953, 1852, 30276, 585, 238, "Output"]
}, Open  ]],
Cell[129244, 2440, 357, 8, 49, "Text"],
Cell[CellGroupData[{
Cell[129626, 2452, 863, 19, 31, "Input"],
Cell[130492, 2473, 229, 7, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130758, 2485, 455, 12, 31, "Input"],
Cell[131216, 2499, 164, 4, 31, "Output"]
}, Open  ]],
Cell[131395, 2506, 354, 8, 49, "Text"],
Cell[131752, 2516, 816, 19, 68, "Text"],
Cell[132571, 2537, 297, 7, 49, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
